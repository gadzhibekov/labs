Вопрос	Варианты ответов	Примеры языков программирования
Какой парадигме программирования следует этот язык?	Объектно-ориентированное / Процедурное / Функциональное / Логическое / Мультипарадигменное	Java, Python / C, Pascal / Haskell, Scala / Prolog / Python, JavaScript
Является ли язык строго- или слабо типизированным?	Строго типизированный / Слабо типизированный	Java, C++ / Python, JavaScript
Какая система типов используется в языке?	Динамическая / Статическая	Python, Ruby / Java, C++
Для каких задач чаще всего применяется этот язык?	Веб-разработка / Системное программирование / Игровая разработка / Машинное обучение / Анализ данных	JavaScript, PHP / C, Rust / C#, UnrealScript / Python / R, Python
Какие операционные системы или платформы поддерживаются этим языком?	Windows / Linux / macOS / Мультиплатформенный	C#, PowerShell / Python, C / Swift / Java, Kotlin
Насколько широко используется этот язык в индустрии?	Высоко / Средне / Низко	JavaScript, Python / Go, Scala / Erlang, Prolog
Какие известные проекты/программы написаны на этом языке?	Linux Kernel / YouTube / Instagram / Unreal Engine / Microsoft Office	C / Python / Python / C++ / C#
Какова доступность документации и обучающих материалов для этого языка?	Отличная / Хорошая / Средняя / Плохая	Python, Java / Ruby, Kotlin / Scala / Assembly
Как язык показывает себя с точки зрения производительности?	Высокая / Средняя / Низкая	C, C++ / Python, JavaScript / PHP
Каковы ограничения производительности этого языка?	Потребление памяти / Медленная скорость исполнения / Ограничения интерпретации	C# / Python / Ruby
Насколько лёгок в изучении синтаксис этого языка?	Лёгкий / Средний / Сложный	Python, JavaScript / Java, C# / C++, Haskell
Какие особенности синтаксиса делают его уникальным?	Простота / Читаемость кода / Подходит для новичков / Сложен для восприятия	Python / Ruby / Scratch / C++
Какие преимущества предлагает этот язык для параллельного/многопоточного программирования?	Эффективная многопоточность / Лимитированная поддержка потоков / Сложная настройка потоков	Java, Rust / Python / C++
Есть ли у языка встроенные возможности для работы с сетью?	Есть (встроенные модули) / Только с использованием сторонних библиотек	Python, Go / C, C++
Какие механизмы управления памятью используются в этом языке?	Ручное управление / Сборщик мусора / Управляется компилятором / Ограниченная работа с памятью	C, C++ / Java, Python / Rust / Assembly
Как активно развивается этот язык?	Часто создаются обновления / Редкие обновления / Считается устаревшим	JavaScript, Swift / Perl / COBOL
Какие инструменты разработчика доступны для работы с этим языком?	VSCode / IntelliJ IDEA / PyCharm / Eclipse / GNU Debugger	JavaScript, Python / Java, Kotlin / Python / C, C++
Какие библиотеки/фреймворки обязательно нужно изучить для этого языка?	NumPy / TensorFlow / Django / Flask / Spring / Hibernate	Python / Python / Python / Python / Java / Java
Какие уникальные возможности предлагает этот язык?	Безопасность памяти / Высокая производительность / Простота интеграции с другими языками	Rust / C, Go / Python, Java
Какие дополнительные инструменты можно использовать вместе с этим языком?	Виртуальные окружения / Инструменты профилирования / Пакеты для автоматизации развертывания	Python (virtualenv) / Java (VisualVM) / JavaScript (Webpack)
Есть ли для этого языка инструменты для автоматизации тестирования?	JUnit / PyTest / TestNG / Selenium	Java / Python / Java / Python, Java
Сколько времени потребуется новичку на освоение основ этого языка?	< Месяц / 1-3 месяца / более 3 месяцев	Python, Scratch / Java, JavaScript / C++, Haskell
Какие первоначальные проекты можно сделать на этом языке, чтобы закрепить навыки?	Чат-бот / Калькулятор / Веб-приложение / Игра / Рабочая утилита	Python, JavaScript / Python, Java / JavaScript, PHP / C#, C++ / Python, Java
Какие ассоциации или курсы специализируются на этом языке?	Coursera / Udemy / Codecademy / Swift Playgrounds / Официальная документация	Python, R / Python, Java / JavaScript / Swift / Все языки
Какие операторы или концепции языка уникальны для него?	Модули / Лямбда-выражения / Генераторы / Замыкания	Python, JavaScript / Python, Scala / Python / JavaScript
Какие типы данных доступны в языке?	Числа / Строки / Списки / Множества / Классы / Структуры	Python, JavaScript / Python, Ruby / Python, Java / Python / Java, C++ / C
Есть ли у языка строгие ограничения по архитектуре программ?	Да, строгие (например, Java) / Нет, гибкость в структуре	Java / Python, JavaScript
Какие подходы к обработке исключений реализованы в языке?	Try-catch / Строгая система обработки ошибок / Ограниченная поддержка ошибок	Java, Python / Rust / C
Какие типы приложений легче всего разработать на этом языке?	Веб-приложения / Мобильные приложения / Игры / Работа с данными / Системное ПО	JavaScript, PHP / Swift, Kotlin / C++, C# / Python, R / C, Rust
Легко ли интегрировать язык с другими системами?	Лёгкая интеграция / Требуются коннекторы / Трудности с интеграцией	Python, Java / C++, R / Assembly
Подходит ли язык для больших проектов?	Хорошо масштабируем / Только для небольших проектов / Ограничения в производительности	Java, C# / Python / Ruby
Поддерживается ли язык большими IT-компаниями?	Google / Microsoft / Apple / Oracle / Нет крупной поддержки	Python, Go / C#, TypeScript / Swift / Java / Rust
Какие недостатки или ограничения языка важны для пользователя?	Плохая производительность / Сложный синтаксис / Слабая поддержка сообщества / Долгий процесс обучения	PHP, Ruby / C++, Haskell / Erlang, Prolog / Rust
Какие расширения файлов соответствуют этому языку программирования?	.py (Python) / .java (Java) / .js (JavaScript) / .cpp (C++) / .swift (Swift)	Python / Java / JavaScript / C++ / Swift